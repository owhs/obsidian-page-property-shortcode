/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var c=Object.defineProperty;var v=Object.getOwnPropertyDescriptor;var w=Object.getOwnPropertyNames;var E=Object.prototype.hasOwnProperty;var x=(t,e)=>{for(var r in e)c(t,r,{get:e[r],enumerable:!0})},T=(t,e,r,s)=>{if(e&&typeof e=="object"||typeof e=="function")for(let i of w(e))!E.call(t,i)&&i!==r&&c(t,i,{get:()=>e[i],enumerable:!(s=v(e,i))||s.enumerable});return t};var k=t=>T(c({},"__esModule",{value:!0}),t);var N={};x(N,{default:()=>o});module.exports=k(N);var u=require("obsidian"),o=class extends u.Plugin{async onload(){this.registerEvent(this.app.workspace.on("layout-change",this.replaceInProperties.bind(this))),this.registerEvent(this.app.workspace.on("active-leaf-change",this.replaceInProperties.bind(this)))}async replaceInProperties(){var e;clearTimeout(e),e=setTimeout(()=>{var r=document.querySelector(".workspace-leaf.mod-active .markdown-reading-view");if(r!==null&&r.style.display!=="none"){let s=document.querySelectorAll(".markdown-reading-view *");Array.combine(Array.from(s).map(a=>Array.from(a.childNodes).filter(n=>n.nodeType===Node.TEXT_NODE)).filter(a=>a.length>0)).forEach(a=>{var n=(a.textContent||"").match(/\@[\w\/ \.]{1,}:[\w\-]{1,}/g);n!==null&&n.forEach(async p=>{var d=p.split(":"),y=d[0].slice(1)+".md",m=await this.app.vault.readRaw(y).catch(()=>"");if(m.slice(0,3)==="---"){var g=Object.assign.apply({},m.slice(4).split("---")[0].split(`
`).filter(l=>l).map(l=>{var h=l.split(": ");return{[h[0]]:h[1].trim()}})),f=g[d[1]];f!==void 0&&(a.textContent=(a.textContent||"").replace(new RegExp(p,"g"),f))}})})}},50)}};
